def spiral_order(matrix):
    """
    Return the elements of `matrix` in spiral order.
    
    :param matrix: List[List[Any]] — a 2D list (m rows × n columns)
    :return: List[Any] — elements in spiral (clockwise) order
    """
    if not matrix or not matrix[0]:
        return []
    
    result = []
    top, bottom = 0, len(matrix) - 1
    left, right = 0, len(matrix[0]) - 1
    
    while top <= bottom and left <= right:
        # 1) Traverse from left to right along the top row
        for col in range(left, right + 1):
            result.append(matrix[top][col])
        top += 1
        
        # 2) Traverse downwards along the rightmost column
        for row in range(top, bottom + 1):
            result.append(matrix[row][right])
        right -= 1
        
        # 3) If still within bounds, traverse from right to left along the bottom row
        if top <= bottom:
            for col in range(right, left - 1, -1):
                result.append(matrix[bottom][col])
            bottom -= 1
        
        # 4) If still within bounds, traverse upwards along the leftmost column
        if left <= right:
            for row in range(bottom, top - 1, -1):
                result.append(matrix[row][left])
            left += 1
    
    return result


# Example usage:
if __name__ == "__main__":
    mat = [
        [ 1,  2,  3,  4],
        [ 5,  6,  7,  8],
        [ 9, 10, 11, 12],
        [13, 14, 15, 16]
    ]
    print(spiral_order(mat))
    # Output: [1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10]
