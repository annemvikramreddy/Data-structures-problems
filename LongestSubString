def lengthOfLongestSubstring(self, s: str) -> int:
    char_map = {}
    left = 0
    max_length = 0

    for right in range(len(s)):
        # If the character is already seen, move the left pointer
        if s[right] in char_map:
            left = max(left, char_map[s[right]] + 1)
        # Update the last seen position of the character
        char_map[s[right]] = right
        # Update the maximum length
        max_length = max(max_length, right - left + 1)

    return max_length
